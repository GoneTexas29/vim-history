AppendCharToRedobuff	buffers.c	/^AppendCharToRedobuff(c)$/
AppendNumberToRedobuff	buffers.c	/^AppendNumberToRedobuff(n)$/
AppendToRedobuff	buffers.c	/^AppendToRedobuff(s)$/
Chk_Abort	amiga.c	/^Chk_Abort()$/
Ctrl	ascii.h	/^#define Ctrl(x) ((x) & 0x1f)$/
Curpos2ptr	storage.c	/^Curpos2ptr()$/
DoOneCmd	cmdline.c	/^DoOneCmd(buff)$/
ExpandOne	cmdline.c	/^ExpandOne(str, list_notfound, mode)$/
ExpandWildCards	amiga.c	/^ExpandWildCards(num_pat, pat, num_file, file, file/
FAIL	regexp.c	/^#define FAIL(m) { emsg(m); return NULL; }$/
FreeWild	amiga.c	/^FreeWild(num, file)$/
FullName	amiga.c	/^FullName(fname, buf, len)$/
GetChars	amiga.c	/^GetChars(buf, maxlen, time)$/
INIT	normal.c	/^#define INIT(x) x$/
ISSPECIAL	edit.c	/^#define ISSPECIAL(c)	((c) < ' ' || (c) >= DEL)$/
MP	amiga.c	/^#define MP(xx)	((struct MsgPort *)((struct FileHan/
Maddcr	addcr.c	/^main(argc, argv)$/
Magic	regexp.c	/^#define Magic(x)	((x)|('\\\\'<<8))$/
Meta	ascii.h	/^#define Meta(x) ((x) | 0x80)$/
Mmain	main.c	/^main(argc, argv)$/
Mmkcmdtab	mkcmdtab.c	/^main(argc, argv)$/
NEXT	regexp.c	/^#define NEXT(p) (((*((p)+1)&0377)<<8) + (*((p)+2)&/
OP	regexp.c	/^#define OP(p)	(*(p))$/
OPENDEBUG	debug.h	/^#	define OPENDEBUG(file)\\$/
OPERAND	regexp.c	/^#define OPERAND(p)		((p) + 3)$/
Opencmd	misccmds.c	/^Opencmd(dir, redraw, delspaces)$/
PeekChr	regexp.c	/^#define PeekChr() curchr	\/* shortcut only when las/
Read	unix.c	/^Read(buf, maxlen)$/
RealWaitForChar	unix.c	/^RealWaitForChar(ticks)$/
ResetRedobuff	buffers.c	/^ResetRedobuff()$/
Supdatescript	script.c	/^Supdatescript(str)$/
TO_LOWER	macros.h	/^# define TO_LOWER(c)	(isupper(c) ? tolower(c) : (c/
TO_UPPER	macros.h	/^# define TO_UPPER(c)	(islower(c) ? toupper(c) : (c/
TTEST	term.c	/^# define TTEST(a) debug1("%s: ", "a"); if (a) {deb/
UCHARAT	regexp.c	/^#define UCHARAT(p)		((int)*(unsigned char *)(p))$/
WaitForChar	msdos.c	/^WaitForChar(msec)$/
__ARGS	regsub.c	/^# define __ARGS(a)	a$/
__PARMS	vim.h	/^# define __PARMS(x)	x$/
_addfmt	termlib.c	/^_addfmt(buf, fmt, val)             \/* add val to b/
_chdrive	msdos.c	/^_chdrive(drive)$/
_find	termlib.c	/^_find(s, set)   \/* finds next c in s that's a memb/
_match	termlib.c	/^_match(s1, s2)                 \/* returns length o/
add_buff	buffers.c	/^add_buff(buf, s)$/
add_char_buff	buffers.c	/^add_char_buff(buf, c)$/
add_num_buff	buffers.c	/^add_num_buff(buf, n)$/
addfile	msdos.c	/^addfile(fl, f, isdir)$/
addstar	cmdline.c	/^addstar(fname, len)$/
adjustCurpos	linefunc.c	/^adjustCurpos()$/
adjustmark	mark.c	/^adjustmark(old, new)$/
alloc	alloc.c	/^alloc(size)$/
alloc_block	storage.c	/^alloc_block()$/
alloc_line	storage.c	/^alloc_line(size)$/
appendline	storage.c	/^appendline(after, s)$/
ask_yesno	misccmds.c	/^ask_yesno(str)$/
autowrite	cmdline.c	/^autowrite()$/
bck_word	search.c	/^bck_word(count, type)$/
beep	misccmds.c	/^beep()$/
beginline	edit.c	/^beginline(flag)$/
blink	msdos.c	/^blink(n)$/
block_prep	ops.c	/^block_prep(lnum, delete)$/
breakcheck	amiga.c	/^breakcheck()$/
bsdmemset	alloc.c	/^bsdmemset(ptr, c, size)$/
buf1line	macros.h	/^#define buf1line() (line_count == 1)$/
bufempty	macros.h	/^#define bufempty() (buf1line() && lineempty((linen/
bzero	unix.c	/^#  define bzero(a, b)	memset((a), 0, (b))$/
call_shell	amiga.c	/^call_shell(cmd, filter, cooked)$/
canincrease	storage.c	/^canincrease(n)$/
catch_cbrk	msdos.c	/^catch_cbrk()$/
catch_cint	msdos.c	/^catch_cint(bp, di, si, ds, es, dx, cx, bx, ax)$/
cbrk_handler	msdos.c	/^cbrk_handler()$/
ccheck_abbr	cmdline.c	/^ccheck_abbr(c)$/
change_warning	misccmds.c	/^change_warning()$/
charsize	charset.c	/^charsize(c)$/
chartabsize	charset.c	/^chartabsize(c, col)$/
check_abbr	buffers.c	/^check_abbr(c, ptr, col, mincol)$/
check_changed	cmdline.c	/^check_changed(checkaw)$/
check_fname	cmdline.c	/^check_fname()$/
check_more	cmdline.c	/^check_more(message)$/
check_msg	message.c	/^check_msg()$/
check_readonly	cmdline.c	/^check_readonly()$/
check_termcode	term.c	/^check_termcode(buf)$/
check_win	amiga.c	/^check_win(argc, argv)$/
check_winsize	term.c	/^check_winsize()$/
checkclearop	normal.c	/^checkclearop()$/
checkclearopq	normal.c	/^checkclearopq()$/
chk_mline	fileio.c	/^chk_mline(lnum)$/
clear_line	screen.c	/^clear_line()$/
clear_termparam	param.c	/^clear_termparam()$/
clearmarked	storage.c	/^clearmarked()$/
clearopbeep	normal.c	/^clearopbeep()$/
clrallmarks	mark.c	/^clrallmarks()$/
clrtags	tag.c	/^clrtags()$/
cls	search.c	/^cls()$/
cmdchecklen	cmdline.c	/^cmdchecklen()$/
coladvance	linefunc.c	/^coladvance(wcol)$/
comp_Botline	screen.c	/^comp_Botline()$/
comp_col	param.c	/^comp_col()$/
copy_redo	buffers.c	/^copy_redo()$/
copy_spaces	alloc.c	/^copy_spaces(ptr, count)$/
cstrchr	regexp.c	/^cstrchr(s, c)$/
cstrncmp	regexp.c	/^cstrncmp(s1, s2, n)$/
curs_columns	screen.c	/^curs_columns(scroll)$/
cursor_off	term.c	/^cursor_off()$/
cursor_on	term.c	/^cursor_on()$/
cursorcmd	cmdline.c	/^cursorcmd()$/
cursupdate	screen.c	/^cursupdate()$/
debug	debug.h	/^#	define debug(x) {fprintf(debugfp,x);fflush(debug/
debug1	debug.h	/^#	define debug1(x,a) {fprintf(debugfp,x,a);fflush(/
debug2	debug.h	/^#	define debug2(x,a,b) {fprintf(debugfp,x,a,b);ffl/
debug3	debug.h	/^#	define debug3(x,a,b,c) {fprintf(debugfp,x,a,b,c)/
dec	linefunc.c	/^dec(lp)$/
decCurpos	linefunc.c	/^decCurpos()$/
decl	linefunc.c	/^decl(lp)$/
decrmarks	mark.c	/^decrmarks()$/
decrtags	tag.c	/^decrtags()$/
del_typestr	buffers.c	/^del_typestr(len)$/
delchar	misccmds.c	/^delchar(fixpos)$/
dellines	misccmds.c	/^dellines(nlines, doscreen, undo)$/
delmode	screen.c	/^delmode()$/
delsline	storage.c	/^delsline(nr, delmarks)$/
dirname	amiga.c	/^dirname(buf, len)$/
do_Lower	regsub.c	/^do_Lower(d, c)$/
do_Upper	regsub.c	/^do_Upper(d, c)$/
do_align	cmdline.c	/^do_align(start, end, width, type)$/
do_copy	regsub.c	/^do_copy(d, c)$/
do_lower	regsub.c	/^do_lower(d, c)$/
do_mlines	fileio.c	/^do_mlines()$/
do_upper	regsub.c	/^do_upper(d, c)$/
doaddsub	ops.c	/^doaddsub(c, Prenum1)$/
doarglist	cmdline.c	/^doarglist(str)$/
dobang	cmdline.c	/^dobang(addr_count, arg)$/
dochange	ops.c	/^dochange()$/
docmdline	cmdline.c	/^docmdline(cmdline)$/
dodelete	ops.c	/^dodelete()$/
dodigraph	digraph.c	/^dodigraph(c)$/
dodis	ops.c	/^dodis()$/
dodojoin	ops.c	/^dodojoin(count, insert_space, redraw)$/
doecmd	cmdline.c	/^doecmd(arg, sarg)$/
doexecbuf	ops.c	/^doexecbuf(c)$/
dofilter	cmdline.c	/^dofilter(buff, do_in, do_out)$/
doformat	ops.c	/^doformat()$/
doglob	csearch.c	/^doglob(type, lp, up, cmd)$/
dojoin	ops.c	/^dojoin(insert_space, redraw)$/
dojumps	mark.c	/^dojumps()$/
domake	cmdline.c	/^domake(arg)$/
domap	buffers.c	/^domap(maptype, keys, mode)$/
domarks	mark.c	/^domarks()$/
doput	ops.c	/^doput(dir, count)$/
dorecord	ops.c	/^dorecord(c)$/
dos_packet	amiga.c	/^dos_packet(pid, action, arg)$/
dosearch	search.c	/^dosearch(dirc, str, reverse, count, echo)$/
doset	param.c	/^doset(arg)$/
doshell	cmdline.c	/^doshell(cmd)$/
doshift	ops.c	/^doshift(op)$/
dosource	cmdline.c	/^dosource(fname)$/
dosub	csearch.c	/^dosub(lp, up, cmd, nextcommand)$/
dotag	tag.c	/^dotag(tag, type, count)$/
dotags	tag.c	/^dotags()$/
dotilde	ops.c	/^dotilde()$/
dowrite	cmdline.c	/^dowrite(arg, append)$/
doyank	ops.c	/^doyank(deleting)$/
echeck_abbr	edit.c	/^echeck_abbr(c)$/
edit	edit.c	/^edit(count)$/
emsg	message.c	/^emsg(s)$/
emsg2	message.c	/^emsg2(s, a1)$/
end_msg	message.c	/^end_msg()$/
end_word	search.c	/^end_word(count, type, stop)$/
equal	macros.h	/^#define equal(a, b) (((a).lnum == (b).lnum) && ((a/
expand_env	misccmds.c	/^expand_env(src, dst, dstlen)$/
expandpath	msdos.c	/^expandpath(fl, path, fonly, donly, notf)$/
filealloc	storage.c	/^filealloc()$/
fileinfo	misccmds.c	/^fileinfo(fullname)$/
filemess	fileio.c	/^filemess(name, s)$/
fill_inbuf	unix.c	/^fill_inbuf()$/
findfunc	search.c	/^findfunc(dir, what, count)$/
findpar	search.c	/^findpar(dir, count, what)$/
findparam	param.c	/^findparam(arg)$/
findsent	search.c	/^findsent(dir, count)$/
findtag	tag.c	/^findtag(tag)$/
firstmarked	storage.c	/^firstmarked()$/
flush_buffers	buffers.c	/^flush_buffers(typeahead)$/
flushbuf	term.c	/^flushbuf()$/
fm_getname	mark.c	/^fm_getname(fmark)$/
fname_case	amiga.c	/^fname_case(name)$/
fnamecmp	vim.h	/^# define fnamecmp(x, y) stricmp((x), (y))$/
free	vim.h	/^# define free(x)	nofreeNULL(x)$/
free_buff	buffers.c	/^free_buff(buf)$/
free_line	storage.c	/^free_line(ptr)$/
free_yank	ops.c	/^free_yank(n)$/
free_yank_all	ops.c	/^free_yank_all()$/
freeall	storage.c	/^freeall()$/
freefiles	amiga.c	/^freefiles()$/
fullpathcmp	misccmds.c	/^fullpathcmp(s1, s2)$/
fwd_word	search.c	/^fwd_word(count, type, eol)$/
gchar	misccmds.c	/^gchar(pos)$/
gcharCurpos	misccmds.c	/^gcharCurpos()$/
get_address	cmdline.c	/^get_address(ptr)$/
get_bufcont	buffers.c	/^get_bufcont(buffer, dozero)$/
get_fib	amiga.c	/^get_fib(fname)$/
get_indent	misccmds.c	/^get_indent()$/
get_inserted	buffers.c	/^get_inserted()$/
get_literal	edit.c	/^get_literal(nextc)$/
get_recorded	buffers.c	/^get_recorded()$/
get_yank_buffer	ops.c	/^get_yank_buffer(writing)$/
getaltfile	cmdline.c	/^getaltfile(n, lnum, setpm)$/
getaltfname	cmdline.c	/^getaltfname(n)$/
getchr	regexp.c	/^getchr()$/
getcmdline	cmdline.c	/^getcmdline(firstc, buff)$/
getdigits	misccmds.c	/^getdigits(pp)$/
getdigraph	digraph.c	/^getdigraph(char1, char2)$/
getent	termlib.c	/^getent(tbuf, term, termcap, buflen)$/
getfile	cmdline.c	/^getfile(fname, sfname, setpm)$/
getlinecol	term.c	/^getlinecol()$/
getmark	mark.c	/^getmark(c, changefile)$/
getout	main.c	/^getout(r)$/
getperm	amiga.c	/^getperm(name)$/
gettail	misccmds.c	/^gettail(fname)$/
getvcol	screen.c	/^getvcol(pos, type)$/
gotchars	buffers.c	/^gotchars(s, len)$/
gotocmdend	cmdline.c	/^gotocmdend()$/
gotocmdline	cmdline.c	/^gotocmdline(clr, firstc)$/
has_wildcard	amiga.c	/^has_wildcard(p)$/
have_wildcard	unix.c	/^have_wildcard(num, file)$/
help	help.c	/^help()$/
inc	linefunc.c	/^inc(lp)$/
incCurpos	linefunc.c	/^incCurpos()$/
inchar	term.c	/^inchar(buf, maxlen, time)$/
incl	linefunc.c	/^incl(lp)$/
incrmarks	mark.c	/^incrmarks()$/
incrtags	tag.c	/^incrtags()$/
inindent	misccmds.c	/^inindent()$/
init_typestr	buffers.c	/^init_typestr()$/
init_yank	ops.c	/^init_yank()$/
initchr	regexp.c	/^initchr(str)$/
inmacro	search.c	/^inmacro(opt, s)$/
ins_typestr	buffers.c	/^ins_typestr(str, noremap)$/
inschar	misccmds.c	/^inschar(c)$/
insertbuf	ops.c	/^insertbuf(c)$/
insertchar	edit.c	/^insertchar(c)$/
insfile	amiga.c	/^insfile(name, isdir)$/
insstr	misccmds.c	/^insstr(s)$/
isdir	amiga.c	/^isdir(name)$/
isidchar	charset.c	/^isidchar(c)$/
ismult	regexp.c	/^ismult(c)$/
ispathsep	misccmds.c	/^ispathsep(c)$/
isspace	vim.h	/^# define isspace(x)  (((x) >= 9 && (x) <= 13) || (/
istermparam	param.c	/^istermparam(p)$/
lalloc	alloc.c	/^lalloc(size, message)$/
lineempty	macros.h	/^#define lineempty(p) (*nr2ptr(p) == NUL)$/
listdigraphs	digraph.c	/^listdigraphs()$/
lock2name	amiga.c	/^lock2name(lock, buf, len)$/
lt	macros.h	/^#define lt(a, b) (((a).lnum != (b).lnum) \\$/
ltoreq	macros.h	/^#define ltoreq(a, b) (((a).lnum != (b).lnum) \\$/
m_blockalloc	storage.c	/^m_blockalloc(size, message)$/
m_blockfree	storage.c	/^m_blockfree()$/
makemap	buffers.c	/^makemap(fd)$/
makescriptname	script.c	/^makescriptname()$/
makeset	param.c	/^makeset(fd)$/
maketitle	misccmds.c	/^maketitle()$/
mark2pos	mark.c	/^mark2pos(markp)$/
mch_get_winsize	amiga.c	/^mch_get_winsize()$/
mch_set_winsize	amiga.c	/^mch_set_winsize()$/
mch_settmode	amiga.c	/^mch_settmode(raw)$/
mch_suspend	amiga.c	/^mch_suspend()$/
mch_windexit	amiga.c	/^mch_windexit(r)$/
mch_windinit	amiga.c	/^mch_windinit()$/
mch_write	amiga.c	/^mch_write(p, len)$/
memmove	alloc.c	/^memmove(desti, source, len)$/
memset	vim.h	/^# define memset(ptr, c, size)	bsdmemset((ptr), (c)/
mktemp	cmdline.c	/^# define mktemp(a)	tmpnam(a)$/
mkup	regexp.c	/^#define mkup(c) 		(reg_ic ? TO_UPPER(c) : (c))$/
modname	script.c	/^modname(fname, ext)$/
movemark	mark.c	/^movemark(count)$/
msg	message.c	/^msg(s)$/
msgmore	misccmds.c	/^msgmore(n)$/
myregcomp	search.c	/^myregcomp(pat)$/
nextent	termlib.c	/^nextent(tbuf, termcap, buflen)         \/* Read 1 e/
nextwild	cmdline.c	/^nextwild(buff, type)$/
nofreeNULL	alloc.c	/^nofreeNULL(x)$/
normal	normal.c	/^normal()$/
nr2ptr	storage.c	/^nr2ptr(nr)$/
onedown	edit.c	/^onedown(n)$/
oneleft	edit.c	/^oneleft()$/
onepage	edit.c	/^onepage(dir, count)$/
oneright	edit.c	/^oneright()$/
oneup	edit.c	/^oneup(n)$/
openrecover	script.c	/^openrecover()$/
openscript	script.c	/^openscript(name)$/
otherfile	misccmds.c	/^otherfile(s)$/
outchar	term.c	/^outchar(c)$/
outnum	term.c	/^outnum(n)$/
outnuml	term.c	/^outnuml(n)$/
outstr	term.c	/^outstr(s)$/
outstrn	term.c	/^outstrn(s)$/
outtrans	charset.c	/^outtrans(str, len)$/
param_expand	param.c	/^param_expand(i, dofree)$/
paramchanged	param.c	/^paramchanged(arg)$/
parse_builtin_tcap	term.c	/^parse_builtin_tcap(tc, s)$/
pchar	macros.h	/^#define pchar(lp, c) (*(nr2ptr((lp).lnum) + (lp).c/
pcharCurpos	misccmds.c	/^pcharCurpos(c)$/
peekchr	regexp.c	/^peekchr()$/
plines	misccmds.c	/^plines(p)$/
plines_m	misccmds.c	/^plines_m(first, last)$/
plural	misccmds.c	/^plural(n)$/
pos2ptr	storage.c	/^pos2ptr(pos)$/
premsg	normal.c	/^premsg(c1, c2)$/
prep_redo	normal.c	/^prep_redo(num, cmd, c, nchar)$/
printdigraph	digraph.c	/^printdigraph(p)$/
prt_line	screen.c	/^prt_line(s)$/
pstrcmp	msdos.c	/^pstrcmp(a, b)$/
ptr2nr	storage.c	/^ptr2nr(ptr, start)$/
putcmdline	cmdline.c	/^putcmdline(c, buff)$/
putdigraph	digraph.c	/^putdigraph(str)$/
putescstr	buffers.c	/^putescstr(fd, str, set)$/
qf_adjustmark	quickfix.c	/^qf_adjustmark(old, new)$/
qf_clrallmarks	quickfix.c	/^qf_clrallmarks()$/
qf_free	quickfix.c	/^qf_free()$/
qf_init	quickfix.c	/^qf_init()$/
qf_jump	quickfix.c	/^qf_jump(errornr)$/
qf_list	quickfix.c	/^qf_list()$/
qf_types	quickfix.c	/^qf_types(c, nr)$/
read_redo	buffers.c	/^read_redo(init)$/
read_stuff	buffers.c	/^read_stuff(advance)$/
readfile	fileio.c	/^readfile(fname, sfname, from, newfile)$/
redrawcmd	cmdline.c	/^redrawcmd()$/
redrawcmdline	cmdline.c	/^redrawcmdline()$/
redrawhelp	help.c	/^redrawhelp()$/
reg	regexp.c	/^reg(paren, flagp)$/
regatom	regexp.c	/^regatom(flagp)$/
regbranch	regexp.c	/^regbranch(flagp)$/
regc	regexp.c	/^regc(b)$/
regcomp	regexp.c	/^regcomp(exp)$/
regdump	regexp.c	/^regdump(r)$/
regexec	regexp.c	/^regexec(prog, string, at_bol)$/
reginsert	regexp.c	/^reginsert(op, opnd)$/
regmatch	regexp.c	/^regmatch(prog)$/
regnext	regexp.c	/^regnext(p)$/
regnode	regexp.c	/^regnode(op)$/
regoptail	regexp.c	/^regoptail(p, val)$/
regpiece	regexp.c	/^regpiece(flagp)$/
regprop	regexp.c	/^regprop(op)$/
regrepeat	regexp.c	/^regrepeat(p)$/
regsub	regsub.c	/^regsub(prog, source, dest, copy, magic)$/
regtail	regexp.c	/^regtail(p, val)$/
regtilde	regsub.c	/^regtilde(source, magic)$/
regtry	regexp.c	/^regtry(prog, string)$/
remove	unix.c	/^remove(buf)$/
rename	unix.c	/^rename(src, dest)$/
replaceline	storage.c	/^replaceline(lnum, new)$/
resettitle	amiga.c	/^resettitle()$/
s_del	screen.c	/^s_del(row, nlines, invalid)$/
s_ins	screen.c	/^s_ins(row, nlines, invalid)$/
samealtfile	cmdline.c	/^samealtfile(n)$/
save_line	storage.c	/^save_line(src)$/
screenalloc	screen.c	/^screenalloc(clear)$/
screenchar	screen.c	/^screenchar(p, row, col)$/
screenclear	screen.c	/^screenclear()$/
screenclear2	screen.c	/^screenclear2()$/
screenfill	screen.c	/^screenfill(srow, c)$/
screenline	screen.c	/^screenline(lnum, startrow, endrow)$/
script_winsize	script.c	/^script_winsize()$/
script_winsize_pp	script.c	/^script_winsize_pp()$/
scriptfullpath	script.c	/^scriptfullpath()$/
scrolldown	screen.c	/^scrolldown(nlines)$/
scrollup	screen.c	/^scrollup(nlines)$/
searchc	search.c	/^searchc(c, dir, type, count)$/
searchit	search.c	/^searchit(pos, dir, str, count, end)$/
set_Changed	misccmds.c	/^set_Changed()$/
set_indent	misccmds.c	/^set_indent(size, delete)$/
set_init	param.c	/^set_init()$/
set_keymap	amiga.c	/^set_keymap(name)$/
set_redo_ins	buffers.c	/^set_redo_ins()$/
set_term	term.c	/^set_term(term)$/
set_window	msdos.c	/^set_window()$/
set_winheight	term.c	/^set_winheight(height)$/
set_winsize	term.c	/^set_winsize(width, height, mustset)$/
setaltfname	cmdline.c	/^setaltfname(arg, sarg, lnum, newfile)$/
setcursor	term.c	/^setcursor()$/
setfname	misccmds.c	/^setfname(s, ss)$/
setmark	mark.c	/^setmark(c)$/
setmarked	storage.c	/^setmarked(lnum)$/
setpcmark	mark.c	/^setpcmark()$/
setperm	amiga.c	/^setperm(name, perm)$/
settitle	amiga.c	/^settitle(str)$/
settmode	term.c	/^settmode(raw)$/
shift_line	ops.c	/^shift_line(left, round)$/
showmap	buffers.c	/^showmap(mp)$/
showmatch	search.c	/^showmatch()$/
showmatches	cmdline.c	/^showmatches(file, len)$/
showmode	screen.c	/^showmode()$/
showonep	param.c	/^showonep(p)$/
showparams	param.c	/^showparams(all)$/
showruler	screen.c	/^showruler(always)$/
sig_winch	unix.c	/^sig_winch()$/
skip_chars	search.c	/^skip_chars(class, dir)$/
skipchr	regexp.c	/^skipchr()$/
skipspace	misccmds.c	/^skipspace(pp)$/
skiptodigit	misccmds.c	/^skiptodigit(pp)$/
skiptospace	misccmds.c	/^skiptospace(pp)$/
sleep	amiga.c	/^sleep(n)$/
smsg	message.c	/^smsg(s, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)$/
sortcmp	amiga.c	/^sortcmp(a, b)$/
startPS	search.c	/^startPS(lnum, para)$/
start_arrow	edit.c	/^start_arrow()$/
start_msg	message.c	/^start_msg()$/
start_redo	buffers.c	/^start_redo(count)$/
start_redo_ins	buffers.c	/^start_redo_ins()$/
start_stuff	buffers.c	/^start_stuff()$/
startinmargin	ops.c	/^startinmargin()$/
startinsert	ops.c	/^startinsert(initstr, startln, count)$/
startscript	script.c	/^startscript()$/
starttermcap	term.c	/^starttermcap()$/
stop_arrow	edit.c	/^stop_arrow()$/
stop_insert	edit.c	/^stop_insert()$/
stop_redo_ins	buffers.c	/^stop_redo_ins()$/
stopscript	script.c	/^stopscript()$/
stoptermcap	term.c	/^stoptermcap()$/
strchr	vim.h	/^# define strchr(ptr, c)			index((ptr), (c))$/
strcspn	regexp.c	/^strcspn(s1, s2)$/
strlowcpy	msdos.c	/^strlowcpy(d, s)$/
strnfcpy	regsub.c	/^strnfcpy(f, d, s, n)$/
strnsave	alloc.c	/^strnsave(string, len)$/
strrchr	vim.h	/^# define strrchr(ptr, c)		rindex((ptr), (c))$/
strsave	alloc.c	/^strsave(string)$/
strsize	charset.c	/^strsize(s)$/
stuffReadbuff	buffers.c	/^stuffReadbuff(s)$/
stuff_empty	buffers.c	/^stuff_empty()$/
stuff_inserted	edit.c	/^stuff_inserted(c, count, no_esc)$/
stuff_yank	ops.c	/^stuff_yank(bufname, p)$/
stuffcharReadbuff	buffers.c	/^stuffcharReadbuff(c)$/
stuffnumReadbuff	buffers.c	/^stuffnumReadbuff(n)$/
swapchar	ops.c	/^swapchar(pos)$/
termcapinit	term.c	/^termcapinit(term)$/
tgetent	termlib.c	/^tgetent(tbuf, term)$/
tgetflag	termlib.c	/^tgetflag(id)$/
tgetnum	termlib.c	/^tgetnum(id)$/
tgetstr	termlib.c	/^tgetstr(id, buf)$/
tgoto	term.c	/^tgoto(cm, x, y)$/
tinit	termlib.c	/^tinit(name)$/
tltoa	term.c	/^tltoa(i)$/
tputs	termlib.c	/^tputs(cp, affcnt, outc)$/
transchar	charset.c	/^transchar(c)$/
ttest	term.c	/^ttest(pairs)$/
u_clearall	undo.c	/^u_clearall()$/
u_clearline	undo.c	/^u_clearline()$/
u_freeentry	undo.c	/^u_freeentry(uep, n)$/
u_freelist	undo.c	/^u_freelist(uhp)$/
u_getbot	undo.c	/^u_getbot()$/
u_inssub	undo.c	/^u_inssub(lnum)$/
u_redo	undo.c	/^u_redo(count)$/
u_save	undo.c	/^u_save(top, bot)$/
u_saveCurpos	undo.c	/^u_saveCurpos()$/
u_savecommon	undo.c	/^u_savecommon(top, bot, nocopy, newbot)$/
u_savedel	undo.c	/^u_savedel(lnum, nlines)$/
u_saveline	undo.c	/^u_saveline(lnum)$/
u_savesub	undo.c	/^u_savesub(lnum)$/
u_sync	undo.c	/^u_sync()$/
u_undo	undo.c	/^u_undo(count)$/
u_undoline	undo.c	/^u_undoline()$/
u_undoredo	undo.c	/^u_undoredo()$/
ungetchr	regexp.c	/^ungetchr()$/
unregc	regexp.c	/^unregc()$/
updateScreen	screen.c	/^updateScreen(type)$/
updateline	screen.c	/^updateline()$/
updatescript	script.c	/^updatescript(c)$/
usage	main.c	/^usage(n)$/
vgetc	buffers.c	/^vgetc()$/
vgetorpeek	buffers.c	/^vgetorpeek(advance)$/
vim_chdir	msdos.c	/^vim_chdir(path)$/
vim_delay	amiga.c	/^vim_delay()$/
vim_remove	msdos.c	/^vim_remove(name)$/
vimgetenv	amiga.c	/^vimgetenv(var)$/
vpeekc	buffers.c	/^vpeekc()$/
wait_return	message.c	/^wait_return(redraw)$/
win_resize_off	amiga.c	/^win_resize_off()$/
win_resize_on	amiga.c	/^win_resize_on()$/
windgoto	term.c	/^windgoto(row, col)$/
write_buf	fileio.c	/^write_buf(fd, buf, len)$/
writeit	fileio.c	/^writeit(fname, sfname, start, end, append, forceit/
